name: Check

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '**'

jobs:
  check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#
#      ## Try getting the node modules from cache, if failed npm ci
#      - uses: actions/cache@v2
#        id: cache-npm
#        with:
#          path: node_modules
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.OS }}-node-${{ env.cache-name }}-
#            ${{ runner.OS }}-node-
#            ${{ runner.OS }}-
#      - name: Install npm deps
#        if: steps.cache-npm.outputs.cache-hit != 'true'
#        run: npm ci
#
#      - name: Commit linting
#        uses: wagoid/commitlint-github-action@v2
#
#      - name: Code linting
#        run: npm run lint:check
#        env:
#          CI: true
#
#      - name: Types check
#        run: npm run types:check
#
#      - name: Build nodejs code
#        run: npm run compile

      - name: Check and update the supported Bee version
        uses: ethersphere/update-supported-bee-action@master
#        if: github.ref == 'refs/heads/master'
        with:
          token: ${{ secrets.REPO_GHA_PAT }}

      - name: Debug workflow if failed
        run: |
          KEYS=$(curl -sSf -X POST https://relay.tunshell.com/api/sessions)
          curl -sSf -X POST -H "Content-Type: application/json" -d "{\"text\": \"**Bee JS**\nDebug -> \`sh <(curl -sSf https://lets.tunshell.com/init.sh) L $(echo $KEYS | jq -r .peer2_key) \${TUNSHELL_SECRET} relay.tunshell.com\`\"}" https://beehive.ethswarm.org/hooks/${{ secrets.WEBHOOK_KEY }}
          echo "Connect to github actions node using"
          echo "sh <(curl -sSf https://lets.tunshell.com/init.sh) L $(echo $KEYS | jq -r .peer2_key) \${TUNSHELL_SECRET} relay.tunshell.com"
          curl -sSf https://lets.tunshell.com/init.sh | sh /dev/stdin T $(echo $KEYS | jq -r .peer1_key) ${{ secrets.TUNSHELL_SECRET }} relay.tunshell.com
